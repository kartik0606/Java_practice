//import java.util.HashMap;
//
//public class Main {
//    public static void main(String[] args) {
//
//        String s = "aabacbebebe";
//        int k = 3;
//        System.out.println(Long(s,k));
//
//    }
//    static int Long(String s , int k  ){
//         int left = 0 ;
//         int right  = 0;
//          int maxlenght= 0;
//        HashMap<Character,Integer>map=new HashMap<>();
//        while (right<s.length()){
//             char c = s.charAt(right);
//             map.put(c,map.getOrDefault(c,0)+1);
//
//             if (map.size()>k){
//                 char charleft = s.charAt(left);
//                 map.put(charleft,map.get(charleft)-1);
//
//                  if (map.get(charleft)==0){
//                       map.remove(charleft);
//                  }
//                   left++;
//
//             }
//              if (map.size()==k){
//                  maxlenght = Math.max(maxlenght,right-left+1);
//              }
//               right++;
//        }
//         return maxlenght;
//    }
//}

import java.util.HashMap;

public class Main {
    public static void main(String[] args) {

        String s = "pwwkew";
        System.out.println(LONGEST(s));

    }

    static int LONGEST(String s) {
        int left = 0;
        int right = 0;
        int Maxlongest = 0;
        HashMap<Character, Integer> map = new HashMap<>();
        while (right < s.length()) {
            char c = s.charAt(right);
            map.put(c, map.getOrDefault(c, 0) + 1);

            while (map.get(c) > 1) {
                char leftchar = s.charAt(left);
                map.put(leftchar, map.get(leftchar) - 1);

                if (map.get(leftchar) == 0) {
                    map.remove(leftchar);
                }
                left++;
            }
            Maxlongest = Math.max(Maxlongest, right - left + 1);
            right++;

        }
        return Maxlongest;

    }

}

